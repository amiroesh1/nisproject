import telebot
from telebot import types
from PIL import Image
import requests
import io
from flask import Flask, request

TOKEN = "7675263394:AAF37007ZwPg5wzC5yeHEaYeUlDDHkDxP_4"
bot = telebot.TeleBot(TOKEN)
app = Flask(__name__)

answers = {
    "–ø—Ä–∏–≤–µ—Ç": "–ü—Ä–∏–≤–µ—Ç! –Ø —Ç–≤–æ–π StudyBuddy ü§ñ. –ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –∏–ª–∏ –∑–∞–¥–∞–π –≤–æ–ø—Ä–æ—Å.",
    "–∫–∞–∫ –¥–µ–ª–∞": "–í—Å—ë –æ—Ç–ª–∏—á–Ω–æ! –ê —É —Ç–µ–±—è? üòä",
    "–ø–æ–º–æ–≥–∏": "–ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø–æ–º–æ—â—å."
}

@bot.message_handler(commands=['start'])
def send_welcome(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton("üìñ –®–ø–∞—Ä–≥–∞–ª–∫–∞")
    btn2 = types.KeyboardButton("üå§ –ü–æ–≥–æ–¥–∞")
    btn3 = types.KeyboardButton("üí° –¶–∏—Ç–∞—Ç–∞ –¥–Ω—è")
    btn4 = types.KeyboardButton("üì∏ –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ")
    markup.add(btn1, btn2, btn3, btn4)

    instructions = (
        "üëã –ü—Ä–∏–≤–µ—Ç! –Ø StudyBuddy ‚Äî –ø–æ–º–æ—â–Ω–∏–∫ –ø–æ —É—á—ë–±–µ.\n\n"
        "–í–æ—Ç —á—Ç–æ —è —É–º–µ—é:\n\n"
        "üìñ –®–ø–∞—Ä–≥–∞–ª–∫–∞ ‚Äî –±—ã—Å—Ç—Ä–∞—è —Ñ–æ—Ä–º—É–ª–∞ –ø–æ –º–∞—Ç–µ–º–∞—Ç–∏–∫–µ.\n"
        "üå§ –ü–æ–≥–æ–¥–∞ ‚Äî —Ç–µ–∫—É—â–∞—è –ø–æ–≥–æ–¥–∞ –≤ —Ç–≤–æ—ë–º –≥–æ—Ä–æ–¥–µ.\n"
        "üí° –¶–∏—Ç–∞—Ç–∞ –¥–Ω—è ‚Äî –≤–¥–æ—Ö–Ω–æ–≤–ª—è—é—â–∞—è —Ü–∏—Ç–∞—Ç–∞ –æ—Ç –∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –ª—é–¥–µ–π.\n"
        "üì∏ –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ ‚Äî —è –ø—Ä–µ–≤—Ä–∞—â—É —Ç–≤–æ—ë —Ñ–æ—Ç–æ –≤ —Å—Ç–∏–∫–µ—Ä.\n\n"
        "–ù–∞–∂–º–∏ –Ω–∞ –Ω—É–∂–Ω—É—é –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ üëá"
    )

    bot.send_message(message.chat.id, instructions, reply_markup=markup)

@bot.message_handler(func=lambda message: True)
def handle_text(message):
    text = message.text.lower()

    if text == "–ø—Ä–∏–≤–µ—Ç":
        bot.send_message(message.chat.id, answers["–ø—Ä–∏–≤–µ—Ç"])
    elif text == "–∫–∞–∫ –¥–µ–ª–∞":
        bot.send_message(message.chat.id, answers["–∫–∞–∫ –¥–µ–ª–∞"])
    elif text == "–ø–æ–º–æ–≥–∏":
        bot.send_message(message.chat.id, answers["–ø–æ–º–æ–≥–∏"])
    elif text == "üìñ —à–ø–∞—Ä–≥–∞–ª–∫–∞":
        bot.send_message(message.chat.id, "üìö –®–ø–∞—Ä–≥–∞–ª–∫–∞ –ø–æ –º–∞—Ç–µ—à–µ: S = œÄr¬≤ ‚Äî –ø–ª–æ—â–∞–¥—å –∫—Ä—É–≥–∞ üòâ")
    elif text == "üå§ –ø–æ–≥–æ–¥–∞":
        send_weather(message)
    elif text == "üí° —Ü–∏—Ç–∞—Ç–∞ –¥–Ω—è":
        send_quote(message)
    elif text == "üì∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ":
        bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å —Ñ–æ—Ç–æ üì∑")
    else:
        bot.send_message(message.chat.id, "ü§î –ù–µ –ø–æ–Ω—è–ª, –ø–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞ –∏–ª–∏ –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É.")

@bot.message_handler(content_types=['photo'])
def handle_photo(message):
    file_id = message.photo[-1].file_id
    file_info = bot.get_file(file_id)
    downloaded_file = bot.download_file(file_info.file_path)

    image = Image.open(io.BytesIO(downloaded_file))
    image = image.resize((512, 512))
    image.save('user_photo.webp', 'WEBP')

    with open('user_photo.webp', 'rb') as sticker_file:
        bot.send_sticker(message.chat.id, sticker_file)

    bot.reply_to(message, "üì∏ –§–æ—Ç–æ –ø–æ–ª—É—á–µ–Ω–æ –∏ –ø—Ä–µ–≤—Ä–∞—â–µ–Ω–æ –≤ —Å—Ç–∏–∫–µ—Ä! üéâ")

def send_weather(message):
    lat = 51.1694
    lon = 71.4491
    url = f"https://api.open-meteo.com/v1/forecast?latitude={lat}&longitude={lon}&current_weather=true"
    try:
        res = requests.get(url)
        data = res.json()
        if "current_weather" in data:
            temp = data["current_weather"]["temperature"]
            wind = data["current_weather"]["windspeed"]
            bot.send_message(message.chat.id, f"üå§ –ü–æ–≥–æ–¥–∞: {temp}¬∞C, –≤–µ—Ç–µ—Ä {wind} –∫–º/—á")
        else:
            bot.send_message(message.chat.id, "üå• –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø–æ–≥–æ–¥—É.")
    except:
        bot.send_message(message.chat.id, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–≥–æ–¥–µ.")

def send_quote(message):
    try:
        res = requests.get("https://zenquotes.io/api/random")
        quote = res.json()[0]['q'] + " ‚Äî " + res.json()[0]['a']
        bot.send_message(message.chat.id, f"üí° {quote}")
    except:
        bot.send_message(message.chat.id, "üí° –£–º–Ω–∞—è —Ü–∏—Ç–∞—Ç–∞: –ù–∏–∫–æ–≥–¥–∞ –Ω–µ —Å–¥–∞–≤–∞–π—Å—è!")

# üì© –ü–æ–ª—É—á–µ–Ω–∏–µ –∞–ø–¥–µ–π—Ç–æ–≤ –æ—Ç Telegram —á–µ—Ä–µ–∑ Webhook
@app.route(f"/{TOKEN}", methods=['POST'])
def receive_update():
    json_str = request.get_data().decode('UTF-8')
    update = telebot.types.Update.de_json(json_str)
    bot.process_new_updates([update])
    return "!", 200

# ‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Webhook –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ
@app.route("/", methods=['GET'])
def setup_webhook():
    webhook_url = f"https://<–¢–í–û–ô-–†–ï–ù–î–ï–†-URL>.onrender.com/{TOKEN}"
    bot.remove_webhook()
    bot.set_webhook(url=webhook_url)
    return "Webhook set", 200

if __name__ == "__main__":
    app.run(host="0.0.0.0", port=10000)
